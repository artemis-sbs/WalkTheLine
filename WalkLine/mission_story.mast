## Import 


#@map/__overview__ "Secret Meeting"
#" The ambassadors are meeting secretly at starbase Phoenix, a base hidden in an asteroid field.

//damage/internal if has_role(DAMAGE_ORIGIN_ID, "__player__") and EVENT.sub_tag == "maelstrom"
explode_player_ship(DAMAGE_ORIGIN_ID)


#
#
# This handles when a player ships is destroyed
# The default is to is to truly delete it
# 
#
//shared/signal/player_ship_destroyed

print("story: Exploded Deleting player_ship")
yield success if get_shared_inventory_value("game_ended", False)

so = to_object(DESTROYED_ID)
if so is not None:
    <all>
       % {so.name} has perished
       % {so.name} has blown up
       % lost contact with {so.name} 

# await delay_sim(1)

so = to_object(DESTROYED_ID)
if so is not None:
    sbs.delete_object(DESTROYED_ID)

await delay_sim(1)

players = role('__player__')
if len(players)==0:
    start_text = "Mission is list!  All the player ships have been destroyed."
    game_started = False
    game_ended = True
    sbs.play_music_file(0, "music/default/failure")
    signal_emit("show_game_results", None)
    ->END




#
# This gives GUIs a chance to for clients to 
# Redirect
#
#
//signal/player_ship_destroyed

ship_id = sbs.get_ship_of_client(client_id)
yield success if ship_id == 0 or ship_id != DESTROYED_ID

jump reassign_to_main if has_role(client_id, "mainscreen")

jump reassign_to_main if client_id == 0
jump reassign_to_hangar if has_role(DESTROYED_ID,"cockpit")

players = to_object_list(role("__player__") - role("exploded"))

jump reassign_to_console_select if len(players)>0

jump reassign_to_hangar if False


---- reassign_to_hangar

gui_reroute_client(client_id, "show_hangar")
yield success

--- reassign_to_console_select
gui_reroute_client(client_id, "select_console")
yield success

--- reassign_to_main
#
# Get a list of valid ships
#
players = to_object_list(role("__player__") - role("exploded"))
yield success if len(players)==0

player = random.choice(players)
if player is not None:
    sbs.assign_client_to_ship(client_id, player.id)
yield success
